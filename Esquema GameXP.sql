/* Esquema GameXP Art Street */


-- Gupo Artístico que possui Nome Artistico como chave e existe um check para que a quantidade 
-- de artistas mínima seja 1 no Grupo
CREATE TABLE GRUPO_ARTISTICO (
    NOME_ARTISTICO VARCHAR2(30) NOT NULL,
    BREVE_DESCRICAO VARCHAR2(200) NOT NULL,
    FACEBOOK VARCHAR2(50),
    INSTAGRAM VARCHAR2(50),
    TWITTER VARCHAR2(50),
    EMAIL VARCHAR2(30),
    QUANTIDADE_ARTISTA NUMBER(2) NOT NULL,
    FOTO BLOB NOT NULL,
    CONSTRAINT PK_GRUPO PRIMARY KEY(NOME_ARTISTICO),
    CONSTRAINT CK_QTD CHECK(QUANTIDADE_ARTISTA >= 1) /* Prever a criação de grupos artístiscos vazios
    -- Será necessário em aplicação checar  a quantidade de artistas do grupo está consistente?? */
);

-- Nesta tabela, o Artista tem seu CPF como chave primária, há um check para a adição do cpf 
-- para ficar no tipo "xxx.xxx.xxx-xx". Além disso, há uma chave estrangeira para o Grupo Artístico
CREATE TABLE ARTISTA (
    CPF CHAR(14) NOT NULL,
    NOME VARCHAR2(40) NOT NULL,
    GRUPO_ARTISTICO VARCHAR2(20) NOT NULL,
    CONSTRAINT PK_ARTISTA PRIMARY KEY (CPF),
    CONSTRAINT CK_CPF CHECK(REGEXP_LIKE(CPF, '[0-9]{3}\.[0-9]{3}\.[0-9]{3}\-[0-9]{2}')),
    CONSTRAINT FK_ARTISTA FOREIGN KEY (GRUPO_ARTISTICO) 
        REFERENCES GRUPO_ARTISTICO(NOME_ARTISTICO) ON DELETE CASCADE ON UPDATE CASCADE
);

-- A tabela Tipo_Profissao registra, para cada artista, o nome da sua melhor obra. Tendo como chave Artista
-- Além disso, ele tem uma FK para a tabela artista, puxando o CPF 
CREATE TABLE TIPO_PROFISSAO (
    ARTISTA CHAR(14) NOT NULL,
    MELHOR_OBRA BLOB, /* Pode-se usar blob, para conter um arquivo
        binário que poderia ser a ilustração, o projeto ou o best-seller  */
    CONSTRAINT PK_TIPO_PROFISSAO PRIMARY KEY (ARTISTA),
    CONSTRAINT FK_TIPO_PROFISSAO FOREIGN KEY (ARTISTA)
        REFERENCES ARTISTA(CPF) ON DELETE CASCADE ON UPDATE CASCADE
);

-- A tabela Profissão registra quais as profissoes que o Artista possui, tendo como chave (artista, profissao)
-- Além disso, ele possui uma FK para artista, onde ele copia o atributo CPF 
CREATE TABLE PROFISSAO (
    ARTISTA CHAR(14) NOT NULL,
    PROFISSAO VARCHAR2(20) NOT NULL,
    CONSTRAINT PK_PROFISSAO PRIMARY KEY (ARTISTA,PROFISSAO),
    CONSTRAINT FK_PROFISSAO FOREIGN KEY (ARTISTA)
        REFERENCES ARTISTA(CPF) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE INFRAESTRUTURA (
    NUMERO NUMBER(3) NOT NULL,
    GRUPO_ARTISTICO VARCHAR2(30) NOT NULL,
    TIPO VARCHAR2(20) NOT NULL,
    DATA DATE NOT NULL,
    CONSTRAINT PK_INFRA PRIMARY KEY (NUMERO),
    CONSTRAINT FK_INFRA FOREIGN KEY (GRUPO_ARTISTICO)
        REFERENCES GRUPO_ARTISTICO (NOME_ARTISTICO) ON DELETE CASCADE
);

CREATE TABLE MESA (
    NUMERO NUMBER(2) NOT NULL,
    SETOR  NUMBER(1) NOT NULL,
    CONSTRAINT PK_NUMERO PRIMARY KEY (NUMERO)
);

CREATE TABLE ESTANDE (
    MESA NUMBER(2) NOT NULL,
    DATA DATE NOT NULL,
    GRUPO_ARTISTICO VARCHAR2(30) NOT NULL,
    CONSTRAINT PK_ESTANDE PRIMARY KEY (MESA,DATA,GRUPO_ARTISTICO),
    CONSTRAINT FK_ESTANDE_1 FOREIGN KEY (MESA) 
        REFERENCES MESA(NUMERO) ON DELETE CASCADE,
    CONSTRAINT FK_ESTANDE_2 FOREIGN KEY (GRUPO_ARTISTICO)
        REFERENCES GRUPO_ARTISTICO(NOME_ARTISTICO) ON DELETE CASCADE
);

CREATE TABLE PORTFOLIO (
    NOME_ARTISTICO VARCHAR2(30) NOT NULL,
    NOME_ARTE VARCHAR2(20) NOT NULL,
    ARTE BLOB NOT NULL,/* VISTO QUE É IMAGEM */
    CONSTRAINT PK_PORTFOLIO PRIMARY KEY (NOME_ARTISTICO, NOME_ARTE),
    CONSTRAINT FK_PORTFOLIO FOREIGN KEY (NOME_ARTISTICO)
        REFERENCES GRUPO_ARTISTICO(NOME_ARTISTICO) ON DELETE CASCADE
);
/* NA TABELA PORTFOLIO, ACRESCENTEI O ATRIBUTO NOME_ARTE COMO STRING, VISTO QUE SE FICASSE 
APENAS NOME_ARTISTICO E ARTE, NAO SERIA POSSIVEL DEFINIR A CHAVE PRIMARIA COM ARTE SENDO DO TIPO BLOB */


CREATE TABLE PRODUTO (
    NOME_ARTISTICO VARCHAR2(30) NOT NULL,
    TIPO VARCHAR2(20) NOT NULL,
    NOME VARCHAR2(30) NOT NULL,
    PRECO DECIMAL (4, 2) NOT NULL,
    QUANTIDADE NUMBER(2),
    TAMANHO VARCHAR2(2),
    ANO_CIRCULACAO DATE, /* tem como pegarmos apenas o ano? */
    CONSTRAINT PK_PROD PRIMARY KEY (NOME_ARTISTICO, TIPO),
    CONSTRAINT FK_PROD FOREIGN KEY (NOME_ARTISTICO)
        REFERENCES GRUPO_ARTISTICO(NOME_ARTISTICO) ON DELETE CASCADE
);

CREATE TABLE VISITANTE (
    QR_CODE VARCHAR2(15), /* String visto que é um código de barras */
    NOME  VARCHAR2(40) NOT NULL,
    EMAIL VARCHAR2(30),
    CPF CHAR (14) NOT NULL,
    CONSTRAINT PK_VISIT PRIMARY KEY (QR_CODE),
    CONSTRAINT CK_VISIT CHECK(REGEXP_LIKE(CPF, '[0-9]{3}\.[0-9]{3}\.[0-9]{3}\-[0-9]{2}'))
);

CREATE TABLE INTERACAO (
    ID NUMBER(5) NOT NULL,
    NOME_ARTISTICO VARCHAR2(30) NOT NULL,
    VISITANTE VARCHAR2(15) NOT NULL,
    DATA_HORA DATE NOT NULL,
    CONSTRAINT PK_INT PRIMARY KEY (ID),
    CONSTRAINT SK_INT UNIQUE (NOME_ARTISTICO, VISITANTE, DATA_HORA),
    CONSTRAINT FK_INT FOREIGN KEY (VISITANTE)
        REFERENCES VISITANTE(QR_CODE) ON DELETE CASCADE
);

CREATE TABLE VENDA (
    INTERACAO NUMBER(5) NOT NULL,
    NOME_ARTISTICO VARCHAR2(30) NOT NULL,
    TIPO VARCHAR2(20) NOT NULL,
    NOTA_FISCAL BLOB NOT NULL,/* NOTA FISCAL SERIA UM BLOB OU STRING???? */
    CONSTRAINT PK_VENDA PRIMARY KEY (INTERACAO, NOME_ARTISTICO, TIPO),
    CONSTRAINT FK_VENDA_1 FOREIGN KEY (INTERACAO)
        REFERENCES INTERACAO(ID) ON DELETE CASCADE,
    CONSTRAINT FK_VENDA_2 FOREIGN KEY (NOME_ARTISTICO, TIPO)
        REFERENCES PRODUTO(NOME_ARTISTICO, TIPO) ON DELETE CASCADE
);

CREATE TABLE EVENTO (
    DIA_HORA DATE NOT NULL,
    LOCAL VARCHAR2(15) NOT NULL,
    TITULO VARCHAR2(15) NOT NULL,
    TIPO VARCHAR2(10),
    CONSTRAINT PK_EVENTO PRIMARY KEY (DIA_HORA, LOCAL)
);

CREATE TABLE REALIZA (
    ARTISTA CHAR(14) NOT NULL,
    DIA_HORA DATE NOT NULL,
    LOCAL VARCHAR2(15) NOT NULL,
    CONSTRAINT PK_REALIZA PRIMARY KEY (ARTISTA, DIA_HORA, LOCAL),
    CONSTRAINT FK_REALIZA_1 FOREIGN KEY (ARTISTA)
        REFERENCES ARTISTA(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_REALIZA_2 FOREIGN KEY (DIA_HORA, LOCAL)
        REFERENCES EVENTO(DIA_HORA, LOCAL) ON DELETE CASCADE
);

CREATE TABLE OFICINA (
    DIA_HORA DATE NOT NULL,
    LOCAL VARCHAR2(15) NOT NULL,
    NOME VARCHAR2(15) NOT NULL,
    CONSTRAINT PK_OFICINA PRIMARY KEY (DIA_HORA, LOCAL),
    CONSTRAINT FK_OFICINA FOREIGN KEY (DIA_HORA, LOCAL)
        REFERENCES EVENTO (DIA_HORA, LOCAL) ON DELETE CASCADE
);

CREATE TABLE TURMA (
    DIA_HORA DATE NOT NULL,
    LOCAL VARCHAR2(15) NOT NULL,
    CODIGO CHAR(5) NOT NULL,
    CONSTRAINT PK_TURMA PRIMARY KEY (DIA_HORA, LOCAL, CODIGO),
    CONSTRAINT FK_TURMA FOREIGN KEY (DIA_HORA, LOCAL)
        REFERENCES OFICINA (DIA_HORA, LOCAL) ON DELETE CASCADE
);

CREATE TABLE MATRICULA (
    VISITANTE VARCHAR2(15) NOT NULL,
    DIA_HORA DATE NOT NULL,
    LOCAL VARCHAR2(15) NOT NULL,
    CODIGO CHAR(5),
    CONSTRAINT PK_MATRICULA PRIMARY KEY (VISITANTE, DIA_HORA, LOCAL, CODIGO),
    CONSTRAINT FK_MATRICULA_1 FOREIGN KEY (VISITANTE)
        REFERENCES VISITANTE(QR_CODE) ON DELETE CASCADE,
    CONSTRAINT FK_MATRICULA_2 FOREIGN KEY (DIA_HORA, LOCAL, CODIGO)
        REFERENCES TURMA (DIA_HORA, LOCAL, CODIGO) ON DELETE CASCADE
);

